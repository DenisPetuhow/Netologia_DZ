
#include <iostream>
#include <Windows.h>

// Рекурсивная функция для вычисления n-го числа Фибоначчи
int fibonacci(int n) {
    if (n == 0)
        return 0;
    if (n == 1)
        return 1;
    return fibonacci(n - 1) + fibonacci(n - 2);
}

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    int n;
    std::cout << "Введите число: ";
    std::cin >> n;
    std::cout << "Числа Фибоначчи: ";
    for (int i = 0; i < n; ++i) {
        std::cout << fibonacci(i) << " ";
    }
    std::cout << std::endl;
    return 0;
}

// • По скорости : Временная сложность рекурсивного алгоритма O(2 ^ n), так как для вычисления каждого n - го числа происходит много повторённых вычислений(каждый вызов функции порождает два новых вызова, кроме базовых случаев).
// • По памяти : Пространственная сложность O(n), поскольку глубина рекурсии достигает n(максимум n вложенных вызовов функции размещаются в стеке).